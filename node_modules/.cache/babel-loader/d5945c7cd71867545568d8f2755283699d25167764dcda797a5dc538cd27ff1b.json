{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/code/f8476612-a604-4c8e-a039-e5c78e967403/src/components/ColorSchemeToggle.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useColorScheme } from '@mui/joy/styles';\nimport IconButton from '@mui/joy/IconButton';\nimport DarkModeRoundedIcon from '@mui/icons-material/DarkModeRounded';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColorSchemeToggle(props) {\n  _s();\n  const {\n    onClick,\n    sx,\n    ...other\n  } = props;\n  const {\n    mode,\n    setMode\n  } = useColorScheme();\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) {\n    return /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"sm\",\n      variant: \"outlined\",\n      color: \"neutral\",\n      ...other,\n      sx: sx,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    id: \"toggle-mode\",\n    size: \"sm\",\n    variant: \"outlined\",\n    color: \"neutral\",\n    ...other,\n    onClick: event => {\n      if (mode === 'light') {\n        setMode('dark');\n      } else {\n        setMode('light');\n      }\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n    },\n    sx: [{\n      '& > *:first-child': {\n        display: mode === 'dark' ? 'none' : 'initial'\n      },\n      '& > *:last-child': {\n        display: mode === 'light' ? 'none' : 'initial'\n      }\n    }, ...(Array.isArray(sx) ? sx : [sx])],\n    children: [/*#__PURE__*/_jsxDEV(DarkModeRoundedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorSchemeToggle, \"9OW/VFRP8lvoxo1+XT7+P6K8gcE=\", false, function () {\n  return [useColorScheme];\n});\n_c = ColorSchemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ColorSchemeToggle\");","map":{"version":3,"names":["React","useColorScheme","IconButton","DarkModeRoundedIcon","LightModeIcon","jsxDEV","_jsxDEV","ColorSchemeToggle","props","_s","onClick","sx","other","mode","setMode","mounted","setMounted","useState","useEffect","size","variant","color","disabled","fileName","_jsxFileName","lineNumber","columnNumber","id","event","display","Array","isArray","children","_c","$RefreshReg$"],"sources":["/home/user/Desktop/code/f8476612-a604-4c8e-a039-e5c78e967403/src/components/ColorSchemeToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useColorScheme } from '@mui/joy/styles';\nimport IconButton, { IconButtonProps } from '@mui/joy/IconButton';\n\nimport DarkModeRoundedIcon from '@mui/icons-material/DarkModeRounded';\nimport LightModeIcon from '@mui/icons-material/LightMode';\n\nexport default function ColorSchemeToggle(props: IconButtonProps) {\n  const { onClick, sx, ...other } = props;\n  const { mode, setMode } = useColorScheme();\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) {\n    return (\n      <IconButton\n        size=\"sm\"\n        variant=\"outlined\"\n        color=\"neutral\"\n        {...other}\n        sx={sx}\n        disabled\n      />\n    );\n  }\n  return (\n    <IconButton\n      id=\"toggle-mode\"\n      size=\"sm\"\n      variant=\"outlined\"\n      color=\"neutral\"\n      {...other}\n      onClick={(event) => {\n        if (mode === 'light') {\n          setMode('dark');\n        } else {\n          setMode('light');\n        }\n        onClick?.(event);\n      }}\n      sx={[\n        {\n          '& > *:first-child': {\n            display: mode === 'dark' ? 'none' : 'initial',\n          },\n          '& > *:last-child': {\n            display: mode === 'light' ? 'none' : 'initial',\n          },\n        },\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n    >\n      <DarkModeRoundedIcon />\n      <LightModeIcon />\n    </IconButton>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,UAAU,MAA2B,qBAAqB;AAEjE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,iBAAiBA,CAACC,KAAsB,EAAE;EAAAC,EAAA;EAChE,MAAM;IAAEC,OAAO;IAAEC,EAAE;IAAE,GAAGC;EAAM,CAAC,GAAGJ,KAAK;EACvC,MAAM;IAAEK,IAAI;IAAEC;EAAQ,CAAC,GAAGb,cAAc,CAAC,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EACnDjB,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpBF,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,IAAI,CAACD,OAAO,EAAE;IACZ,oBACET,OAAA,CAACJ,UAAU;MACTiB,IAAI,EAAC,IAAI;MACTC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,SAAS;MAAA,GACXT,KAAK;MACTD,EAAE,EAAEA,EAAG;MACPW,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAEN;EACA,oBACEpB,OAAA,CAACJ,UAAU;IACTyB,EAAE,EAAC,aAAa;IAChBR,IAAI,EAAC,IAAI;IACTC,OAAO,EAAC,UAAU;IAClBC,KAAK,EAAC,SAAS;IAAA,GACXT,KAAK;IACTF,OAAO,EAAGkB,KAAK,IAAK;MAClB,IAAIf,IAAI,KAAK,OAAO,EAAE;QACpBC,OAAO,CAAC,MAAM,CAAC;MACjB,CAAC,MAAM;QACLA,OAAO,CAAC,OAAO,CAAC;MAClB;MACAJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGkB,KAAK,CAAC;IAClB,CAAE;IACFjB,EAAE,EAAE,CACF;MACE,mBAAmB,EAAE;QACnBkB,OAAO,EAAEhB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;MACtC,CAAC;MACD,kBAAkB,EAAE;QAClBgB,OAAO,EAAEhB,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG;MACvC;IACF,CAAC,EACD,IAAIiB,KAAK,CAACC,OAAO,CAACpB,EAAE,CAAC,GAAGA,EAAE,GAAG,CAACA,EAAE,CAAC,CAAC,CAClC;IAAAqB,QAAA,gBAEF1B,OAAA,CAACH,mBAAmB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBpB,OAAA,CAACF,aAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEjB;AAACjB,EAAA,CAlDuBF,iBAAiB;EAAA,QAEbN,cAAc;AAAA;AAAAgC,EAAA,GAFlB1B,iBAAiB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}